# -*- mode: ruby -*-
# vi: set ft=ruby :
=begin
Author: stephen-ka
Company: n0cloudlabs

# Getting Started:
1. Install Vagrant plugins
`vagrant plugin install vagrant-hostmanager`
`vagrant plugin install vagrant-vbguest`
2. Generate SSH Keys for local env
`ssh-keygen -t rsa -N "" -f $(pwd)/id_rsa_vagrant`
3. Bring up the env
`vagrant up`
4. Connect to MASTER or use v`agrant ssh <servername>`
`vagrant ssh`
5. Once connected to the master, you can ssh into any lab server using keys (without a password) with command: `ssh vagrant@<serverhostname>`
6.HALTs the lab and powers off VMs - retains environment
`vagrant halt`
7. HALT and DELETE ALL VMs - LOOSE ALL DATA
`vagrant destroy -f` 

### Additional boxes can be added from https://app.vagrantup.com/boxes/search


 #### Future Items
1. Move script to external file, add package manager conditionals.
2. Import gpg keys as part of scripts.
3. Port forwards all rem'd out due to conflict.  can only forward on one guest.
4. Add shared disk for clusters.
5. Fix bash profile for remote terminal functionality - run command from terminal manually
### Fix terminsl session 
eval `ssh-agent -s`
`ssh-add`
=end

# Global Definitions
CENTOS7 = "centos/7"
NETSUB = "10.7.100."
MASTERIP = NETSUB + "5"

# MASTER or BASTION Server Definitions (Also Primary Server for vagrant shh)
MASTER_SERVER_CPU = 1
MASTER_SERVER_MEMORY = 1024
MASTER_SERVER_OS = CENTOS7
MASTER_SERVER_NAME = "chef-infra-workstation"

# APP Server Definitions - 0 by default for no deployment
APP_SERVER_COUNT = 0
APP_SERVER_CPU = 1
APP_SERVER_MEMORY = 1024
APP_SERVER_OS = CENTOS7
APP_SERVER_NAME = "chef-infra-server" # This name will be suffixed with a count number

# Node Server Definitions - 0 by default for no deployment
NODE_SERVER_COUNT = 0
NODE_SERVER_CPU = 1
NODE_SERVER_MEMORY = 512
NODE_SERVER_OS = CENTOS7
NODE_SERVER_NAME = "chef-client-node" # This name will be suffixed with a count number

Vagrant.configure("2") do |config|
  config.hostmanager.enabled = true
  config.ssh.forward_agent = true

  # Install POSTS SCRIPTS on ALL Machines 
  #config.vm.provision "shell", inline: $POST_SCRIPT_YUM


  config.vm.define MASTER_SERVER_NAME + "1", primary: true do |master|
    master.vm.box = CENTOS7
    #master.vm.box = "ubuntu/focal64"
    master.vm.hostname = MASTER_SERVER_NAME + "1"
    master.vm.network :private_network, ip: MASTERIP
    #master.vbguest.installer_options = { allow_kernel_upgrade: true }
    master.vm.provision "file", source: "./id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa_vagrant"
    master.vm.provision "file", source: "./id_rsa_vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa_vagrant.pub"
    master.vm.provision "file", source: "./scripts/config", destination: "/home/vagrant/.ssh/config"
    master.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa_vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
    master.vm.provision "shell", inline: "chown -R vagrant:vagrant /home/vagrant/.ssh/"
    master.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/config"
    master.vm.provision "shell", inline: "eval $(ssh-agent)"
    master.vm.provision "shell", inline: "ssh-add /home/vagrant/.ssh/id_rsa_vagrant"
    master.vm.provision "shell", path: "scripts/common.sh"
    master.vm.provision "shell", path: "scripts/chefinfraworkstation.sh"
    master.vm.provider "virtualbox" do |vb|
      vb.cpus = MASTER_SERVER_CPU
      vb.memory = MASTER_SERVER_MEMORY
    end
  end
  
    (1..APP_SERVER_COUNT).each do |i|
      config.vm.define APP_SERVER_NAME + "#{i}" do |app|
      app.vm.box = APP_SERVER_OS
      app.vm.hostname = APP_SERVER_NAME + "#{i}"
      app.vm.network :private_network, ip: NETSUB + "#{i + 30}"
      #app.vbguest.installer_options = { allow_kernel_upgrade: true }
      app.vm.provision "file", source: "./id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa_vagrant"
      app.vm.provision "file", source: "./id_rsa_vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa_vagrant.pub"
      app.vm.provision "file", source: "./scripts/config", destination: "/home/vagrant/.ssh/config"
      app.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa_vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
      app.vm.provision "shell", inline: "chown -R vagrant:vagrant /home/vagrant/.ssh/"
      app.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/config"
      #app.vm.provision "shell", path: "scripts/scripts1.sh"
      #app.vm.provision "shell", path: "scripts/scripts2.sh"
      #app.vm.network :forwarded_port, guest: 80, host: 8080
      #app.vm.network :forwarded_port, guest: 443, host: 4343
        app.vm.provider "virtualbox" do |vb|
          vb.cpus = APP_SERVER_CPU
          vb.memory = APP_SERVER_MEMORY
        end
      end
    end
    
    (1..NODE_SERVER_COUNT).each do |i|
      config.vm.define NODE_SERVER_NAME + "#{i}" do |node|
      node.vm.box = NODE_SERVER_OS
      node.vm.hostname = NODE_SERVER_NAME + "#{i}"
      node.vm.network :private_network, ip: NETSUB + "#{i + 50}"
      #node.vbguest.installer_options = { allow_kernel_upgrade: true }
      node.vm.provision "file", source: "./id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa_vagrant"
      node.vm.provision "file", source: "./id_rsa_vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa_vagrant.pub"
      node.vm.provision "file", source: "./scripts/config", destination: "/home/vagrant/.ssh/config"
      node.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa_vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
      node.vm.provision "shell", inline: "chown -R vagrant:vagrant /home/vagrant/.ssh/"
      node.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/config"
      #node.vm.provision "shell", path: "scripts/scripts1.sh"
      #node.vm.provision "shell", path: "scripts/scripts2.sh"
      #node.vm.network :forwarded_port, guest: 80, host: 8080
      #node.vm.network :forwarded_port, guest: 443, host: 4343
        node.vm.provider "virtualbox" do |vb|
          vb.cpus = NODE_SERVER_CPU
          vb.memory = NODE_SERVER_MEMORY
        end
      end
    end
  end